---
source: tests/lexer_tests.rs
expression: output
---
Tokens: [
    "Let",
    "Ident(\"sum\")",
    "Assign",
    "Ident(\"a\")",
    "Plus",
    "Ident(\"b\")",
    "Let",
    "Ident(\"diff\")",
    "Assign",
    "Ident(\"a\")",
    "Minus",
    "Ident(\"b\")",
    "Let",
    "Ident(\"prod\")",
    "Assign",
    "Ident(\"a\")",
    "Star",
    "Ident(\"b\")",
    "Let",
    "Ident(\"div\")",
    "Assign",
    "Ident(\"a\")",
    "Slash",
    "Ident(\"b\")",
    "Let",
    "Ident(\"mod\")",
    "Assign",
    "Ident(\"a\")",
    "Percent",
    "Ident(\"b\")",
    "Let",
    "Ident(\"eq\")",
    "Assign",
    "Ident(\"a\")",
    "Eq",
    "Ident(\"b\")",
    "Let",
    "Ident(\"ne\")",
    "Assign",
    "Ident(\"a\")",
    "Ne",
    "Ident(\"b\")",
    "Let",
    "Ident(\"lt\")",
    "Assign",
    "Ident(\"a\")",
    "Lt",
    "Ident(\"b\")",
    "Let",
    "Ident(\"le\")",
    "Assign",
    "Ident(\"a\")",
    "Le",
    "Ident(\"b\")",
    "Let",
    "Ident(\"gt\")",
    "Assign",
    "Ident(\"a\")",
    "Gt",
    "Ident(\"b\")",
    "Let",
    "Ident(\"ge\")",
    "Assign",
    "Ident(\"a\")",
    "Ge",
    "Ident(\"b\")",
    "Let",
    "Ident(\"and_op\")",
    "Assign",
    "Ident(\"a\")",
    "And",
    "Ident(\"b\")",
    "Let",
    "Ident(\"or_op\")",
    "Assign",
    "Ident(\"a\")",
    "Or",
    "Ident(\"b\")",
    "Let",
    "Ident(\"not_op\")",
    "Assign",
    "Not",
    "Ident(\"a\")",
    "Let",
    "Ident(\"and_sym\")",
    "Assign",
    "Ident(\"a\")",
    "AndAnd",
    "Ident(\"b\")",
    "Let",
    "Ident(\"or_sym\")",
    "Assign",
    "Ident(\"a\")",
    "OrOr",
    "Ident(\"b\")",
    "Let",
    "Ident(\"not_sym\")",
    "Assign",
    "Bang",
    "Ident(\"a\")",
]
