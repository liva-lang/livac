---
source: tests/parser_tests.rs
expression: json
---
{
  "items": [
    {
      "UseRust": {
        "crate_name": "tokio",
        "alias": null
      }
    },
    {
      "UseRust": {
        "crate_name": "std::thread",
        "alias": null
      }
    },
    {
      "Function": {
        "name": "fetchMultipleUsers",
        "type_params": [],
        "params": [],
        "return_type": null,
        "body": {
          "stmts": [
            {
              "VarDecl": {
                "name": "user1",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "fetchUser"
                    },
                    "args": [
                      {
                        "Literal": {
                          "Int": 1
                        }
                      }
                    ],
                    "exec_policy": "async"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "user2",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "fetchUser"
                    },
                    "args": [
                      {
                        "Literal": {
                          "Int": 2
                        }
                      }
                    ],
                    "exec_policy": "async"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "user3",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "fetchUser"
                    },
                    "args": [
                      {
                        "Literal": {
                          "Int": 3
                        }
                      }
                    ],
                    "exec_policy": "async"
                  }
                }
              }
            },
            {
              "Return": {
                "expr": {
                  "ArrayLiteral": [
                    {
                      "Identifier": "user1"
                    },
                    {
                      "Identifier": "user2"
                    },
                    {
                      "Identifier": "user3"
                    }
                  ]
                }
              }
            }
          ]
        },
        "expr_body": null,
        "is_async_inferred": false
      }
    },
    {
      "Function": {
        "name": "processData",
        "type_params": [],
        "params": [],
        "return_type": null,
        "body": {
          "stmts": [
            {
              "VarDecl": {
                "name": "data",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "fetchData"
                    },
                    "args": [],
                    "exec_policy": "async"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "processed",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "processIntensive"
                    },
                    "args": [
                      {
                        "Identifier": "data"
                      }
                    ],
                    "exec_policy": "par"
                  }
                }
              }
            },
            {
              "Expr": {
                "expr": {
                  "Call": {
                    "callee": {
                      "Identifier": "logProcessStart"
                    },
                    "args": [],
                    "exec_policy": "fire-async"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "task_handle",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "backgroundWork"
                    },
                    "args": [],
                    "exec_policy": "task-par"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "final",
                "type_ref": null,
                "init": {
                  "Unary": {
                    "op": "Await",
                    "operand": {
                      "Identifier": "task_handle"
                    }
                  }
                }
              }
            },
            {
              "Return": {
                "expr": {
                  "ArrayLiteral": [
                    {
                      "Identifier": "data"
                    },
                    {
                      "Identifier": "processed"
                    },
                    {
                      "Identifier": "final"
                    }
                  ]
                }
              }
            }
          ]
        },
        "expr_body": null,
        "is_async_inferred": false
      }
    },
    {
      "Function": {
        "name": "mixedConcurrencyDemo",
        "type_params": [],
        "params": [],
        "return_type": null,
        "body": {
          "stmts": [
            {
              "VarDecl": {
                "name": "a1",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "task1"
                    },
                    "args": [],
                    "exec_policy": "async"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "a2",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "task2"
                    },
                    "args": [],
                    "exec_policy": "async"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "a3",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "task3"
                    },
                    "args": [],
                    "exec_policy": "async"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "p1",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "cpuTask"
                    },
                    "args": [
                      {
                        "Literal": {
                          "Int": 1
                        }
                      }
                    ],
                    "exec_policy": "par"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "p2",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "cpuTask"
                    },
                    "args": [
                      {
                        "Literal": {
                          "Int": 2
                        }
                      }
                    ],
                    "exec_policy": "par"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "result1",
                "type_ref": null,
                "init": {
                  "Binary": {
                    "op": "Add",
                    "left": {
                      "Binary": {
                        "op": "Add",
                        "left": {
                          "Identifier": "a1"
                        },
                        "right": {
                          "Identifier": "a2"
                        }
                      }
                    },
                    "right": {
                      "Identifier": "a3"
                    }
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "result2",
                "type_ref": null,
                "init": {
                  "Binary": {
                    "op": "Add",
                    "left": {
                      "Identifier": "p1"
                    },
                    "right": {
                      "Identifier": "p2"
                    }
                  }
                }
              }
            },
            {
              "Expr": {
                "expr": {
                  "Call": {
                    "callee": {
                      "Identifier": "logResults"
                    },
                    "args": [
                      {
                        "Identifier": "result1"
                      },
                      {
                        "Identifier": "result2"
                      }
                    ],
                    "exec_policy": "fire-async"
                  }
                }
              }
            },
            {
              "Expr": {
                "expr": {
                  "Call": {
                    "callee": {
                      "Identifier": "cleanup"
                    },
                    "args": [],
                    "exec_policy": "fire-par"
                  }
                }
              }
            },
            {
              "Return": {
                "expr": {
                  "Binary": {
                    "op": "Mul",
                    "left": {
                      "Identifier": "result1"
                    },
                    "right": {
                      "Identifier": "result2"
                    }
                  }
                }
              }
            }
          ]
        },
        "expr_body": null,
        "is_async_inferred": false
      }
    },
    {
      "Function": {
        "name": "lazyConcurrencyDemo",
        "type_params": [],
        "params": [],
        "return_type": null,
        "body": {
          "stmts": [
            {
              "VarDecl": {
                "name": "future1",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "expensiveAsyncOperation"
                    },
                    "args": [
                      {
                        "Literal": {
                          "Int": 1
                        }
                      }
                    ],
                    "exec_policy": "async"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "future2",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "expensiveParallelOperation"
                    },
                    "args": [
                      {
                        "Literal": {
                          "Int": 2
                        }
                      }
                    ],
                    "exec_policy": "par"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "intermediate",
                "type_ref": null,
                "init": {
                  "Call": {
                    "callee": {
                      "Identifier": "doSomeWork"
                    },
                    "args": [],
                    "exec_policy": "normal"
                  }
                }
              }
            },
            {
              "VarDecl": {
                "name": "result1",
                "type_ref": null,
                "init": {
                  "Identifier": "future1"
                }
              }
            },
            {
              "VarDecl": {
                "name": "result2",
                "type_ref": null,
                "init": {
                  "Identifier": "future2"
                }
              }
            },
            {
              "Return": {
                "expr": {
                  "Binary": {
                    "op": "Add",
                    "left": {
                      "Binary": {
                        "op": "Add",
                        "left": {
                          "Identifier": "result1"
                        },
                        "right": {
                          "Identifier": "result2"
                        }
                      }
                    },
                    "right": {
                      "Identifier": "intermediate"
                    }
                  }
                }
              }
            }
          ]
        },
        "expr_body": null,
        "is_async_inferred": false
      }
    },
    {
      "Function": {
        "name": "main",
        "type_params": [],
        "params": [],
        "return_type": null,
        "body": {
          "stmts": [
            {
              "Expr": {
                "expr": {
                  "Call": {
                    "callee": {
                      "Identifier": "print"
                    },
                    "args": [
                      {
                        "Literal": {
                          "String": "Advanced concurrency features parsed successfully"
                        }
                      }
                    ],
                    "exec_policy": "normal"
                  }
                }
              }
            }
          ]
        },
        "expr_body": null,
        "is_async_inferred": false
      }
    }
  ]
}
