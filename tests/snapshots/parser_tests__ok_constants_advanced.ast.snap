---
source: tests/parser_tests.rs
expression: json
---
{
  "items": [
    {
      "Function": {
        "name": "main",
        "type_params": [],
        "params": [],
        "return_type": null,
        "body": {
          "stmts": [
            {
              "VarDecl": {
                "bindings": [
                  {
                    "name": "PI",
                    "type_ref": null
                  }
                ],
                "init": {
                  "Literal": {
                    "Float": 3.14159
                  }
                },
                "is_fallible": false
              }
            },
            {
              "VarDecl": {
                "bindings": [
                  {
                    "name": "GREETING",
                    "type_ref": null
                  }
                ],
                "init": {
                  "Literal": {
                    "String": "Hello, World!"
                  }
                },
                "is_fallible": false
              }
            },
            {
              "VarDecl": {
                "bindings": [
                  {
                    "name": "MAX_SIZE",
                    "type_ref": null
                  }
                ],
                "init": {
                  "Literal": {
                    "Int": 1024
                  }
                },
                "is_fallible": false
              }
            },
            {
              "Expr": {
                "expr": {
                  "Call": {
                    "callee": {
                      "Identifier": "print"
                    },
                    "args": [
                      {
                        "StringTemplate": {
                          "parts": [
                            {
                              "Text": "PI: "
                            },
                            {
                              "Expr": {
                                "Identifier": "PI"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "exec_policy": "normal",
                    "type_args": []
                  }
                }
              }
            },
            {
              "Expr": {
                "expr": {
                  "Call": {
                    "callee": {
                      "Identifier": "print"
                    },
                    "args": [
                      {
                        "StringTemplate": {
                          "parts": [
                            {
                              "Text": "GREETING: "
                            },
                            {
                              "Expr": {
                                "Identifier": "GREETING"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "exec_policy": "normal",
                    "type_args": []
                  }
                }
              }
            },
            {
              "Expr": {
                "expr": {
                  "Call": {
                    "callee": {
                      "Identifier": "print"
                    },
                    "args": [
                      {
                        "StringTemplate": {
                          "parts": [
                            {
                              "Text": "MAX_SIZE: "
                            },
                            {
                              "Expr": {
                                "Identifier": "MAX_SIZE"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "exec_policy": "normal",
                    "type_args": []
                  }
                }
              }
            },
            {
              "Expr": {
                "expr": {
                  "Call": {
                    "callee": {
                      "Identifier": "print"
                    },
                    "args": [
                      {
                        "Literal": {
                          "String": "Constants parsed successfully"
                        }
                      }
                    ],
                    "exec_policy": "normal",
                    "type_args": []
                  }
                }
              }
            }
          ]
        },
        "expr_body": null,
        "is_async_inferred": false,
        "contains_fail": false
      }
    }
  ]
}
